<?php
// $Id$

/**
 * @file
 * Adds a voting widget to terms.
 */

/**
 * Implementation of hook_perm().
 */
function vud_term_perm() {
  return array('use vote up/down on terms', 'administer vote up/down on terms');
}

/**
 * Implementation of hook_menu().
 */
function vud_term_menu() {
  $items = array();
  $items['admin/settings/voteupdown/term'] = array(
    'title'            => 'Terms',
    'description'      => 'Vote Up/Down Term settings',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('vud_term_admin_settings'),
    'access arguments' => array('administer vote up/down on terms'),
    'type'             => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Advanced menu settings callback.
 */
function vud_term_admin_settings() {
  $form['vud_term_which_nodes'] = array(
    '#type'          => 'fieldset',
    '#title'         => t('Node types'),
    '#description'   => t('Select the node types you want to activate voting on:'),
  );
  $form['vud_term_which_nodes']['vud_term_types'] = array(
    '#type'          => 'checkboxes',
    '#default_value' => variable_get('vud_term_types', array()),
    '#options'       => node_get_types('names'),
  );
  $form['vud_term_widget_select'] = array(
    '#type'          => 'fieldset',
    '#title'         => t('Widget Selection'),
    '#description'   => t('Select the voting widget that will be displayed:'),
  );
  $form['vud_term_widget_select']['vud_term_widget'] = array(
    '#type'          => 'radios',
    '#default_value' => variable_get('vud_term_widget', 'plain'),
    '#options'       => vud_read_widgets(),
  );
  $form['vud_term_reset_votes'] = array(
    '#type'          => 'fieldset',
    '#title'         => t('Allow votes reset'),
    '#description'   => t('Choose if users are allowed to reset their vote on a node:'),
  );
  $form['vud_term_reset_votes']['vud_term_reset'] = array(
    '#type'          => 'radios',
    '#default_value' => variable_get('vud_term_reset', 0),
    '#options'       => array(0 => 'No', 1 => 'Yes'),
  );

  return system_settings_form($form);
}

/**
 * Implementation of hook_nodeapi().
 */
function vud_term_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'view':
      if (user_access('use vote up/down on terms')) {
        $node_type = in_array($node->type, variable_get('vud_term_types', array()), TRUE);
        if ($node_type) {
          $widget = variable_get('vud_term_widget', 'plain');
          foreach ($node->taxonomy as $term => $tdetails) {
            $cid =  $node->nid . $tdetails->tid;
            $reset_token = drupal_get_token("votereset/term/$cid/$tag");
            $tag = variable_get('vud_tag', 'vote');
            if (variable_get('vud_term_reset', 0)) {
              $header = array(
                array('data' => t('Term')),
                array('data' => t('Description')),
                array('data' => t('Vote')),
                array('data' => t('Score')),
                array('data' => t('Reset')),
              );
              $rows[] = array(
                $tdetails->name,
                $tdetails->description,
                theme('vud_widget', $cid, "term", $tag, $widget),
                "<span id=\"total-votes-term-$cid\">". _vud_term_get_row_votes($cid) .'</span>',
                l('Reset your vote', "votereset/term/$cid/$tag/$reset_token"),
              );
            }
            else {
              $header = array(
                array('data' => t('Term')),
                array('data' => t('Description')),
                array('data' => t('Vote')),
                array('data' => t('Score')),
              );
              $rows[] = array(
                $tdetails->name,
                $tdetails->description,
                theme('vud_widget', $cid, "term", $tag, $widget),
                "<span id=\"total-votes-term-$cid\">". _vud_term_get_row_votes($cid) .'</span>',
              );
            }
          }
          $node->content['vud_term_show_table'] = array(
            '#value' => theme('table', $header, $rows, $attributes = array('class' => 'vud-term-table', 'id' => "term-table-$node->nid")),
            '#weight' => 0,
          );
        }
      }
  }
}

/**
 * Implementation of hook_theme().
 */
function vud_term_theme() {
  return array(
    'vud_widget' => array(
      'arguments' => array('cid'  => NULL, 'type' => NULL, 'tag'  => NULL, 'widget_theme' => NULL),
      'function'  => 'vud_widget_proxy',
    ),
  );
}

/**
 * Function to get votes for a particular term row on a node.
 */
function _vud_term_get_row_votes($cid) {
  $tag = variable_get('vud_tag', 'vote');
  $criteria = array(
    'content_type' => 'term',
    'content_id' => $cid,
    'value_type' => 'points',
    'tag' => $tag,
    'function' => 'sum'
  );
  $vote_result = (int) votingapi_select_single_result_value($criteria);
  return $vote_result;
}
